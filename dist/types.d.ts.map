{"mappings":";AAIA,qCACsC,SAAQ,UAAU;IAEtD,GAAG,SAAM;;IAMT,YAAY;IAaZ,MAAM,CAAC,MAAM,0BAAS;IAEtB,MAAM;CAKP","sources":["src/src/index.ts","src/index.ts"],"sourcesContent":[null,"import { LitElement, html, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n// import { Graph } from \"blueprint-renderer\";\n\n@customElement(\"blueprint-renderer\")\nexport class BlueprintRendererElement extends LitElement {\n  @property({ attribute: true, reflect: true })\n  src = \"\";\n\n  constructor() {\n    super();\n  }\n\n  firstUpdated() {\n    this.updateGraph();\n    BlueprintRendererElement.readGraphCode(\"./graph.bp\");\n  }\n\n  private static async readGraphCode(url: string) {\n    const res = await fetch(url, {\n      headers: { \"Content-Type\": \"text/plain\" },\n    });\n    const data = await res.text();\n    console.log(data);\n  }\n\n  static styles = css``;\n\n  render() {\n    return html` <div id=\"graph\"></div> `;\n  }\n\n  private updateGraph() {}\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"blueprint-renderer\": BlueprintRendererElement;\n  }\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}