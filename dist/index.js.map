{"mappings":";;;;;;;;;;;;;0BAMG,IAA4C;IAF9C,KAAmC,GAAnC,kCAAa,CAAC,CAAoB;IACtB,yCAAwB,aADpC,KAAmC,4BACvB,wBAAwB,SAAS,qBAAU;iBAIxC,CAAC;QACb,KAAK;0DAHP,CAAG;IAIH,CAAC;IAED,YAAY,GAAG,CAAC;QACd,IAAI,CAAC,WAAW;QAChB,wBAAwB,CAAC,aAAa,CAAC,CAAY;IACrD,CAAC;iBAEoB,aAAa,CAAC,GAAW,EAAE,CAAC;QAC/C,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,OAAO,EAAE,CAAC;gBAAC,CAAc,eAAE,CAAY;YAAC,CAAC;QAC3C,CAAC;QACD,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI;IAClB,CAAC;IAID,MAAM,GAAG,CAAC;QACR,MAAM,CAAC,eAAI,CAAC,wBAAwB;IACtC,CAAC;IAEO,WAAW,GAAG,CAAC;IAAA,CAAC;UANjB,MAAM,GAAG,cAAG,aApBlB,IAA4C,GAA5C,6BAAQ,CAAC,CAAC;IAAC,SAAS,EAAE,IAAI;IAAE,OAAO,EAAE,IAAI;AAAC,CAAC,+EAC5C,CAAG;IADF,IAA4C;;;;;;eACvC,CAAE","sources":["src/index.ts"],"sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n// import { Graph } from \"blueprint-renderer\";\n\n@customElement(\"blueprint-renderer\")\nexport class BlueprintRendererElement extends LitElement {\n  @property({ attribute: true, reflect: true })\n  src = \"\";\n\n  constructor() {\n    super();\n  }\n\n  firstUpdated() {\n    this.updateGraph();\n    BlueprintRendererElement.readGraphCode(\"./graph.bp\");\n  }\n\n  private static async readGraphCode(url: string) {\n    const res = await fetch(url, {\n      headers: { \"Content-Type\": \"text/plain\" },\n    });\n    const data = await res.text();\n    console.log(data);\n  }\n\n  static styles = css``;\n\n  render() {\n    return html` <div id=\"graph\"></div> `;\n  }\n\n  private updateGraph() {}\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"blueprint-renderer\": BlueprintRendererElement;\n  }\n}\n"],"names":[],"version":3,"file":"index.js.map"}